{"ast":null,"code":"export default Vallidations = () => {\n  const IsNumberKey = e => {\n    const isValidInput = /^[0-9\\b]+$/.test(e.key);\n    if (!isValidInput) {\n      e.preventDefault();\n    }\n  };\n  const IsAlphabetNumber = e => {\n    const isValidInput = /[^a-zA-Z0-9]/.test(e.key);\n    if (isValidInput) {\n      e.preventDefault();\n    }\n  };\n  const IsAlphabetKey = e => {\n    const isValidInput = /^[a-zA-Z\\s]+$/.test(e.key);\n    if (!isValidInput) {\n      e.preventDefault();\n    }\n  };\n  const IsNumberDecimalKey = e => {\n    const isValidInput = /^[0-9.]*$/.test(e.key);\n    if (!isValidInput || (e.target.value + '' + e.key).split('.').length > 2) {\n      e.preventDefault();\n    }\n    // if((e.target.value).match(/\\w\\../) && (e.target.value).match(/[A-Za-z]\\.\\d/)){\n    //     e.preventDefault();\n    // }\n  };\n\n  // E.g:- OnKeyPress={IsEmail}  -- allow only alphabet,numeric,@,.\n  const IsEmail = e => {\n    const isValidInput = /^[a-zA-Z0-9@._-]+$/.test(e.key);\n    if (!isValidInput) {\n      e.preventDefault();\n    }\n    return true;\n  };\n};","map":{"version":3,"names":["Vallidations","IsNumberKey","e","isValidInput","test","key","preventDefault","IsAlphabetNumber","IsAlphabetKey","IsNumberDecimalKey","target","value","split","length","IsEmail"],"sources":["E:/React toolkit app/redux_toolkit_app/src/component/Vallidations.js"],"sourcesContent":["export default Vallidations = () => {\r\n    const IsNumberKey = (e) => {\r\n        const isValidInput = /^[0-9\\b]+$/.test(e.key);\r\n        if (!isValidInput) { e.preventDefault(); }\r\n    };\r\n\r\n    const IsAlphabetNumber = (e) => {\r\n        const isValidInput = /[^a-zA-Z0-9]/.test(e.key);\r\n        if (isValidInput) { e.preventDefault(); }\r\n    };\r\n\r\n    const IsAlphabetKey = (e) => {\r\n        const isValidInput = /^[a-zA-Z\\s]+$/.test(e.key);\r\n        if (!isValidInput) { e.preventDefault(); }\r\n    };\r\n    const IsNumberDecimalKey = (e) => {\r\n        const isValidInput = /^[0-9.]*$/.test(e.key);\r\n        if (!isValidInput || ((e.target.value + '' + e.key).split('.').length > 2)) {\r\n            e.preventDefault();\r\n        }\r\n        // if((e.target.value).match(/\\w\\../) && (e.target.value).match(/[A-Za-z]\\.\\d/)){\r\n        //     e.preventDefault();\r\n        // }\r\n    };\r\n\r\n    // E.g:- OnKeyPress={IsEmail}  -- allow only alphabet,numeric,@,.\r\n    const IsEmail = (e) => {\r\n        const isValidInput = /^[a-zA-Z0-9@._-]+$/.test(e.key);\r\n\r\n        if (!isValidInput) {\r\n            e.preventDefault();\r\n        }\r\n        return true\r\n    };\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAAA,eAAeA,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,MAAMC,YAAY,GAAG,YAAY,CAACC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC;IAC7C,IAAI,CAACF,YAAY,EAAE;MAAED,CAAC,CAACI,cAAc,CAAC,CAAC;IAAE;EAC7C,CAAC;EAED,MAAMC,gBAAgB,GAAIL,CAAC,IAAK;IAC5B,MAAMC,YAAY,GAAG,cAAc,CAACC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC;IAC/C,IAAIF,YAAY,EAAE;MAAED,CAAC,CAACI,cAAc,CAAC,CAAC;IAAE;EAC5C,CAAC;EAED,MAAME,aAAa,GAAIN,CAAC,IAAK;IACzB,MAAMC,YAAY,GAAG,eAAe,CAACC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC;IAChD,IAAI,CAACF,YAAY,EAAE;MAAED,CAAC,CAACI,cAAc,CAAC,CAAC;IAAE;EAC7C,CAAC;EACD,MAAMG,kBAAkB,GAAIP,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAG,WAAW,CAACC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC;IAC5C,IAAI,CAACF,YAAY,IAAK,CAACD,CAAC,CAACQ,MAAM,CAACC,KAAK,GAAG,EAAE,GAAGT,CAAC,CAACG,GAAG,EAAEO,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,GAAG,CAAE,EAAE;MACxEX,CAAC,CAACI,cAAc,CAAC,CAAC;IACtB;IACA;IACA;IACA;EACJ,CAAC;;EAED;EACA,MAAMQ,OAAO,GAAIZ,CAAC,IAAK;IACnB,MAAMC,YAAY,GAAG,oBAAoB,CAACC,IAAI,CAACF,CAAC,CAACG,GAAG,CAAC;IAErD,IAAI,CAACF,YAAY,EAAE;MACfD,CAAC,CAACI,cAAc,CAAC,CAAC;IACtB;IACA,OAAO,IAAI;EACf,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}