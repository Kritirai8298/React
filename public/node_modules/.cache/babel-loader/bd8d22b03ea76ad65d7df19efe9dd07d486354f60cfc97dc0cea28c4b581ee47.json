{"ast":null,"code":"var _jsxFileName = \"E:\\\\React toolkit app\\\\redux_toolkit_app\\\\src\\\\component\\\\Product.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Product = () => {\n  _s();\n  const [products, setproducts] = useState([]);\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\").then(response => response.json()).then(result => setproducts(result)).catch(e => console.log(e));\n  }, []);\n  const cards = products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-3\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: \"cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Product, \"rpZ7Rb6Z9bwcG89T2G5qShIJrYs=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Product","_s","products","setproducts","fetch","then","response","json","result","catch","e","console","log","cards","map","product","className","children","style","width","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","_c","$RefreshReg$"],"sources":["E:/React toolkit app/redux_toolkit_app/src/component/Product.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Product = () => {\r\n    const [products, setproducts] = useState([])\r\n    useEffect(() => {\r\n        fetch(\"https://fakestoreapi.com/products\")\r\n            .then(response => response.json())\r\n            .then(result => setproducts(result))\r\n            .catch(e => console.log(e))\r\n    }, [])\r\n\r\n    const cards = products.map(product => (\r\n        <div className='col-md-3'>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                <Card.Body>\r\n                    <Card.Title>Card Title</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the\r\n                        bulk of the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                cards\r\n            </div >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIL,WAAW,CAACK,MAAM,CAAC,CAAC,CACnCC,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGX,QAAQ,CAACY,GAAG,CAACC,OAAO,iBAC9BlB,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBpB,OAAA,CAACF,IAAI;MAACuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,gBAC5BpB,OAAA,CAACF,IAAI,CAACyB,GAAG;QAACC,OAAO,EAAC,KAAK;QAACC,GAAG,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnD7B,OAAA,CAACF,IAAI,CAACgC,IAAI;QAAAV,QAAA,gBACNpB,OAAA,CAACF,IAAI,CAACiC,KAAK;UAAAX,QAAA,EAAC;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACnC7B,OAAA,CAACF,IAAI,CAACkC,IAAI;UAAAZ,QAAA,EAAC;QAGX;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACZ7B,OAAA,CAACH,MAAM;UAAC2B,OAAO,EAAC,SAAS;UAAAJ,QAAA,EAAC;QAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CACR,CAAC;EAEF,oBACI7B,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA;MAAKmB,SAAS,EAAC,KAAK;MAAAC,QAAA,EAAC;IAErB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAET,CAAC;AAEX,CAAC;AAAAzB,EAAA,CAjCKD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAmCb,eAAeA,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}